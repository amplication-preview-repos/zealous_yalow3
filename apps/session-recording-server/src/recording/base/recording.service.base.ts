/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Recording as PrismaRecording,
  Session as PrismaSession,
} from "@prisma/client";

export class RecordingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecordingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recording.count(args);
  }

  async recordings<T extends Prisma.RecordingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecordingFindManyArgs>
  ): Promise<PrismaRecording[]> {
    return this.prisma.recording.findMany<Prisma.RecordingFindManyArgs>(args);
  }
  async recording<T extends Prisma.RecordingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecordingFindUniqueArgs>
  ): Promise<PrismaRecording | null> {
    return this.prisma.recording.findUnique(args);
  }
  async createRecording<T extends Prisma.RecordingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecordingCreateArgs>
  ): Promise<PrismaRecording> {
    return this.prisma.recording.create<T>(args);
  }
  async updateRecording<T extends Prisma.RecordingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecordingUpdateArgs>
  ): Promise<PrismaRecording> {
    return this.prisma.recording.update<T>(args);
  }
  async deleteRecording<T extends Prisma.RecordingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecordingDeleteArgs>
  ): Promise<PrismaRecording> {
    return this.prisma.recording.delete(args);
  }

  async getSession(parentId: string): Promise<PrismaSession | null> {
    return this.prisma.recording
      .findUnique({
        where: { id: parentId },
      })
      .session();
  }
}
